<?php

namespace Tests\Feature;

use App\Models\User;
use Illuminate\Foundation\Testing\DatabaseTransactions;
use Illuminate\Support\Facades\Hash;
use Tests\TestCase;

class AuthControllerTest extends TestCase
{
    use DatabaseTransactions;

    protected $password='password';
    protected $expectedTokenStructure = [
        'access_token',
        'token_type',
        'expires_in'
    ];
protected function setUp(): void
{
    parent::setUp(); // TODO: Change the autogenerated stu
    $this->user = User::first();
}

    public function testUserCanLoginWithEmail()
    {
        $this->user->password = Hash::make($this->password);
        $this->user->save();
        $data = [
            'email' => $this->user->email,
            'password' => $this->password,
        ];
        $response = $this->post('/api/auth/login', $data);

        $response->assertStatus(200)
            ->assertJsonFragment([
                "token_type"=>"Bearer",
                "expires_in"=>config('jwt.ttl') * 60
            ])
            ->assertJsonStructure($this->expectedTokenStructure);
    }

    public function testUserLoginFailed()
    {
        $this->user->password = Hash::make($this->password);
        $this->user->save();
        $data = [
            'email' => $this->user->email,
            'password' => $this->password . '123',
        ];

        $response = $this->post('/api/auth/login', $data);

        $response->assertStatus(401)
            ->assertJsonFragment([
                "error"=>"Unauthorized",
            ]);
    }
}
